syntax = "v1"

import "types.api"

@server(
	group: auth
	prefix: /auth
	middleware: CorsMiddleware,BodyLoggerMiddleware
)

service gateway {
	@doc "User registration"
	@handler Register
	post /user_register (RegisterRequest) returns (RegisterResponse)
	
	@doc "User login to obtain token"
	@handler Login
	post /user_token (LoginRequest) returns (LoginResponse)
	
	@doc "Parse the token"
	@handler ParseToken
	post /parse_token (ParseTokenRequest) returns (ParseTokenResponse)
	
	@doc "Force logout"
	@handler ForceLogout
	post /force_logout (ForceLogoutRequest) returns (ForceLogoutResponse)
}

@server(
	group: client
	prefix: /init
	middleware: CorsMiddleware,BodyLoggerMiddleware
)

service gateway {
	@doc "Set client config"
	@handler SetClientConfig
	post /set_client_config (SetClientConfigRequest) returns (SetClientConfigResponse)
	
	@doc "Get client config"
	@handler GetClientConfig
	post /get_client_config (GetClientConfigRequest) returns (GetClientConfigResponse)
}

@server(
	group: conversation
	prefix: /conversation
	middleware: CorsMiddleware,BodyLoggerMiddleware
)

service gateway {
	@doc "Get user's all conversations"
	@handler GetAllConversations
	post /get_all_conversations (GetAllConversationsRequest) returns (GetAllConversationsResponse)
	
	@doc "Get conversation by id"
	@handler GetConversation
	post /get_conversation (GetConversationRequest) returns (GetConversationResponse)
	
	@doc "Get conversations by ids"
	@handler GetConversations
	post /get_conversations (GetConversationsRequest) returns (GetConversationsResponse)
	
	@doc "Set conversation"
	@handler SetConversation
	post /set_conversation (SetConversationRequest) returns (SetConversationResponse)
	
	@doc "Batch set conversations"
	@handler BatchSetConversations
	post /batch_set_conversation (BatchSetConversationsRequest) returns (BatchSetConversationsResponse)
	
	@doc "Set recv msg opt"
	@handler SetRecvMsgOpt
	post /set_recv_msg_opt (SetRecvMsgOptRequest) returns (SetRecvMsgOptResponse)
	
	@doc "Modify conversation field"
	@handler ModifyConversationField
	post /modify_conversation_field (ModifyConversationFieldRequest) returns (ModifyConversationFieldResponse)
}

@server(
	group: friend
	prefix: /friend
	middleware: CorsMiddleware,BodyLoggerMiddleware
)

service gateway {
	@doc "Add a friend"
	@handler AddFriend
	post /add_friend (AddFriendRequest) returns (AddFriendResponse)
	
	@doc "Delete a friend"
	@handler DeleteFriend
	post /delete_friend (DeleteFriendRequest) returns (DeleteFriendResponse)
	
	@doc "Get friend apply list"
	@handler GetFriendApplyList
	post /get_friend_apply_list (GetFriendApplyListRequest) returns (GetFriendApplyListResponse)
	
	@doc "Get self friend apply list"
	@handler GetSelfFriendApplyList
	post /get_self_friend_apply_list (GetSelfFriendApplyListRequest) returns (GetSelfFriendApplyListResponse)
	
	@doc "Get friend list"
	@handler GetFriendList
	post /get_friend_list (GetFriendListRequest) returns (GetFriendListResponse)
	
	@doc "Respond to a friend request"
	@handler RespondFriendApply
	post /add_friend_response (RespondFriendApplyRequest) returns (RespondFriendApplyResponse)
	
	@doc "Set friend remark"
	@handler SetFriendRemark
	post /set_friend_remark (SetFriendRemarkRequest) returns (SetFriendRemarkResponse)
	
	@doc "Add friend blacklist"
	@handler AddFriendBlacklist
	post /add_black (AddFriendBlacklistRequest) returns (AddFriendBlacklistResponse)
	
	@doc "Get friend blacklist"
	@handler GetFriendBlacklist
	post /get_black_list (GetFriendBlacklistRequest) returns (GetFriendBlacklistResponse)
	
	@doc "Remove friend blacklist"
	@handler RemoveFriendBlacklist
	post /remove_black (RemoveFriendBlacklistRequest) returns (RemoveFriendBlacklistResponse)
	
	@doc "Import friend"
	@handler ImportFriend
	post /import_friend (ImportFriendRequest) returns (ImportFriendResponse)
	
	@doc "Check friend"
	@handler CheckFriend
	post /is_friend (CheckFriendRequest) returns (CheckFriendResponse)
}