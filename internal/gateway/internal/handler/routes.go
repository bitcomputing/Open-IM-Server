// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	auth "Open_IM/internal/gateway/internal/handler/auth"
	client "Open_IM/internal/gateway/internal/handler/client"
	"Open_IM/internal/gateway/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.BodyLoggerMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/user_register",
					Handler: auth.RegisterHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user_token",
					Handler: auth.LoginHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/parse_token",
					Handler: auth.ParseTokenHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/force_logout",
					Handler: auth.ForceLogoutHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/auth"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.BodyLoggerMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/set_client_config",
					Handler: client.SetClientConfigHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/get_client_config",
					Handler: client.GetClientConfigHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/init"),
	)
}
